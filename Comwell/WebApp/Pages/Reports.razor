@page "/rapporter"
@inject IUserService UserService
@using Core.Models
@using WebApp.Services

<h3>Rapporter</h3>

<div>
    <label>VÃ¦lg lokation:</label>
    <select @bind="selectedLocation">
        <option value="">Alle lokationer</option>
        @foreach (var loc in locations)
        {
            <option value="@loc">@loc</option>
        }
    </select>
</div>

<div style="margin-top: 1rem;">
    <h4>Statistik</h4>
    <p><strong>Samlet antal ansatte:</strong> @filteredUsers.Count()</p>
    <ul>
        @foreach (var role in roles)
        {
            <li>@role: @filteredUsers.Count(u => u.Role == role)</li>
        }
    </ul>
</div>

<div style="margin-top: 1rem;">
    <h4>Alle brugere</h4>
    <table>
        <thead>
        <tr>
            <th>Navn</th>
            <th>Email</th>
            <th>Rolle</th>
            <th>Lokation</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in filteredUsers)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>@user.Role</td>
                <td>@user.Hotel</td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code {
    private List<User> allUsers = new();
    private List<User> filteredUsers => string.IsNullOrWhiteSpace(selectedLocation)
        ? allUsers
        : allUsers.Where(u => u.Hotel == selectedLocation).ToList();

    private List<string> locations = new();
    private List<string> roles = new();
    private string selectedLocation = "";

    protected override async Task OnInitializedAsync()
    {
        allUsers = await UserService.GetAllUsersAsync();

        locations = allUsers
            .Where(u => !string.IsNullOrWhiteSpace(u.Hotel))
            .Select(u => u.Hotel)
            .Distinct()
            .OrderBy(h => h)
            .ToList();
        
        roles = allUsers
            .Select(u => u.Role)
            .Where(r => !string.IsNullOrWhiteSpace(r))
            .Distinct()
            .OrderBy(r => r)
            .ToList();
    }
}